plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
}

group = 'com.algaworks'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://jaspersoft.artifactoryonline.com/jaspersoft/jr-ce-releases"
    }
    maven {
        url 'https://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/'
    }
    maven {
        url 'https://jasperreports.sourceforge.net/maven2'
    }
    maven {
        url 'https://repository.jboss.org/maven2/'
    }
}

test{
    useJUnitPlatform()
    dependsOn 'cleanTest'

    testLogging {
        events "passed", "skipped", "failed"
    }
    afterTest { desc, result ->
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
    testLogging {
        exceptionFormat = 'full'
    }
}

ext{
    modelmapperVersion = '3.1.0'
    squigglyVersion = '1.3.18'
    amazonAwsS3Version = '1.12.338'
    oauth2OicdcSdk = '10.1'
    springSecurityJwtVersion = '1.1.1.RELEASE'
    springSecurityOauth2 = '2.5.2.RELEASE'
    springdocVersion = '1.6.12'
}

configurations {
    all{
        exclude group: "org.eclipse.angus", module: "angus-activation"
    }
}

dependencies{
    implementation "com.amazonaws:aws-java-sdk-s3:$amazonAwsS3Version"
    implementation ("com.github.bohnman:squiggly-filter-jackson:$squigglyVersion"){
        exclude group: 'com.google.guava', module: 'guava'
    }
    implementation 'com.google.guava:guava:31.1-jre'
    implementation "com.nimbusds:oauth2-oidc-sdk:$oauth2OicdcSdk"
    implementation 'com.sun.xml.bind:jaxb-core:4.0.1'
    implementation ("io.rest-assured:rest-assured:5.2.0"){
        exclude group: 'org.codehaus.groovy', module: 'groovy-xml'
    }
    implementation 'javax.xml.bind:jaxb-api'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    implementation "org.apache.commons:commons-lang3"
    implementation "org.modelmapper:modelmapper:$modelmapperVersion"
    implementation "org.springdoc:springdoc-openapi-hateoas:$springdocVersion"
    implementation "org.springdoc:springdoc-openapi-security:$springdocVersion"
    implementation "org.springdoc:springdoc-openapi-ui:$springdocVersion"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation "org.springframework.boot:spring-boot-starter-mail"
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.security:spring-security-jwt:$springSecurityJwtVersion"
    implementation "org.springframework.security.oauth:spring-security-oauth2:$springSecurityOauth2"
    implementation "org.thymeleaf.extras:thymeleaf-extras-java8time"

    developmentOnly "org.springframework.boot:spring-boot-devtools"

    runtimeOnly 'com.mysql:mysql-connector-j'

    //compileOnly "net.sf.jasperreports:jasperreports:${jasperreportsVersion}"
    //compileOnly "net.sf.jasperreports:jasperreports-functions:${jasperreportsFunctionsVersion}"
    //compileOnly "net.sf.jasperreports:jasperreports-fonts:${jasperreportsFontsVersion}"
    compileOnly "org.projectlombok:lombok"
    compileOnly "org.hibernate:hibernate-jpamodelgen"

    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "org.hibernate:hibernate-jpamodelgen"

    testImplementation "org.springframework.boot:spring-boot-starter-test"

    testAnnotationProcessor "org.hibernate:hibernate-jpamodelgen"
}

bootRun{
    jvmArgs '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=*:5005'
}

build{
    File trigger = file('src/main/resources/trigger.txt')
    trigger.write new Date().getTime().toString()
}